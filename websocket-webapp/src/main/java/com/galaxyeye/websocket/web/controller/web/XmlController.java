package com.galaxyeye.websocket.web.controller.web;//package com.galaxyeye.websocket.web.controller.web;/* * Description:com.galaxyeye.websocket.web.controller.web * @Date Create on 11:03 * @author <a href="mailto:yangyi@galaxyeye-tech.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-02-22日SXC All Rights Reserved. */import com.alibaba.fastjson.JSON;import com.galaxyeye.websocket.application.repository.XmlCaseRepository;import com.galaxyeye.websocket.infrastructure.repository.entity.XmlCase;import com.galaxyeye.websocket.infrastructure.repository.entity.example.XmlCaseExample;import com.galaxyeye.websocket.service.TestngService;import com.galaxyeye.websocket.tool.domain.Result;import com.galaxyeye.websocket.tool.jedis.JedisTemplate;import lombok.NonNull;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.List;import java.util.Map;@Slf4j@Controller@RequestMapping("/api/testng/web")public class XmlController {	@Autowired	private TestngService testngService;	@Autowired	private XmlCaseRepository xmlCaseRepository;	@Autowired	private JedisTemplate jedisTemplate;	@RequestMapping(value ="/excute/total/testCase",method = RequestMethod.POST)	@ResponseBody	public Result<?> excuteTotalTestCase(@RequestBody (required=true) List<String> list ) {		Result<String> result = new Result<>();		if(list.isEmpty() || list==null ||list.size()<=0)		{			result.setSuccess(false);			result.setErrorMessage("请求参数为空！"+JSON.toJSONString(list));			log.info("list: {}", JSON.toJSONString(list));			return result;		}		try{			String re=testngService.excuteTotalXml(list);			result.setData(re);			result.setSuccess(true);		}catch (Exception e){			log.error("excuteTestCase: {}", e);			result.setE(e);			result.setSuccess(false);		}		return result;	}	@RequestMapping(value ="/excute/detail/testCase",method = RequestMethod.POST)	@ResponseBody	public Result<?> excuteDetailTestCase(@RequestBody (required=true) List<String> list) {		Result<String> result = new Result<>();		if(list.isEmpty() || list==null ||list.size()<=0)		{			result.setSuccess(false);			result.setErrorMessage("请求参数为空！"+JSON.toJSONString(list));			log.info("list: {}", JSON.toJSONString(list));			return result;		}		try{			String re=testngService.excuteDetailXml(list);			result.setData(re);			result.setSuccess(true);		}catch (Exception e){			log.error("excuteTestCase: {}", e);			result.setE(e);			result.setSuccess(false);		}		return result;	}	@RequestMapping(value ="/get/total/testCase",method = RequestMethod.POST)	@ResponseBody	public Result<?> getTotalTestCase(@RequestBody (required=true) List<Integer> list ) {		Result<List<XmlCase>> result = new Result<>();		if(list.isEmpty() || list==null ||list.size()<=0)		{			result.setSuccess(false);			result.setErrorMessage("请求参数为空！"+JSON.toJSONString(list));			log.info("list: {}", JSON.toJSONString(list));			return result;		}		try{			XmlCaseExample totalRequest=new XmlCaseExample();			XmlCaseExample.Criteria cr=totalRequest.createCriteria();			cr.andTypeIn(list);			result.setData(xmlCaseRepository.selectByExample(totalRequest));			result.setSuccess(true);		}catch (Exception e){			log.error("excuteTestCase: {}", e);			result.setE(e);			result.setSuccess(false);		}		return result;	}	@RequestMapping(value ="/get/detail/testCase",method = RequestMethod.POST)	@ResponseBody	public Result<?> getDetailTestCase(@RequestBody (required=true) List<Integer> list) {		Result<List<XmlCase>> result = new Result<>();		if(list.isEmpty() || list==null ||list.size()<=0)		{			result.setSuccess(false);			result.setErrorMessage("请求参数为空！"+JSON.toJSONString(list));			log.info("list: {}", JSON.toJSONString(list));			return result;		}		try{			XmlCaseExample detailRequest=new XmlCaseExample();			XmlCaseExample.Criteria cr=detailRequest.createCriteria();			cr.andTypeIn(list);			result.setData(xmlCaseRepository.selectByExample(detailRequest));			result.setSuccess(true);		}catch (Exception e){			log.error("excuteTestCase: {}", e);			result.setE(e);			result.setSuccess(false);		}		return result;	}	@RequestMapping(value ="/get/moduleName",method = RequestMethod.GET)	@ResponseBody	public Result<?> getModuleName() {		Result<List<String>> result = new Result<>();		try{			result.setData(xmlCaseRepository.selectAllModuleName());			result.setSuccess(true);		}catch (Exception e){			log.error("excuteTestCase: {}", e);			result.setE(e);			result.setSuccess(false);		}		return result;	}	@RequestMapping(value ="/get/caseName",method = RequestMethod.POST)	@ResponseBody	public Result<?> getCaseName(@RequestBody (required=true) Map<String,String> map) {		Result<List<XmlCase>> result = new Result<>();		String moduleName=map.get("moduleName");		String type=map.get("type");		if(moduleName==null || type==null){			result.setSuccess(false);			result.setErrorMessage("参数错误");			return result;		}		try{			XmlCaseExample example=new XmlCaseExample();			XmlCaseExample.Criteria cr=example.createCriteria();			cr.andModuleNameEqualTo(String.valueOf(moduleName));			if(type.equals("1") || type.equals("0")){				cr.andTypeEqualTo(Integer.valueOf(type));			}			result.setData(xmlCaseRepository.selectByExample(example));			result.setSuccess(true);		}catch (Exception e){			log.error("excuteTestCase: {}", e);			result.setE(e);			result.setSuccess(false);		}		return result;	}}