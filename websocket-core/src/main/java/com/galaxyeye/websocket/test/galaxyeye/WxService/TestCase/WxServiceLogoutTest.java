package com.galaxyeye.websocket.test.galaxyeye.WxService.TestCase;/* * Description:com.galaxyeye.websocket.test * @Date Create on 16:11 * @author <a href="mailto:yangyi@galaxyeye-tech.com">yangyi</a> * @Version JDK 1.8 * @since version 1.0 Copyright 2019-06-10日galaxyeye All Rights Reserved. */import com.alibaba.fastjson.JSON;import com.galaxyeye.websocket.test.galaxyeye.BaseTest;import com.galaxyeye.websocket.test.galaxyeye.CustomReport.Enum.ModuleNameEnum;import com.galaxyeye.websocket.test.galaxyeye.WxService.BO.WxServiceReqLoginBO;import com.galaxyeye.websocket.tool.jedis.JedisTemplate;import com.galaxyeye.websocket.tool.websocket.client.WebSocketClient;import com.galaxyeye.websocket.tool.websocket.request.WebsocketReqContentPara;import com.galaxyeye.websocket.tool.websocket.response.WebsocketResContentPara;import com.galaxyeye.websocket.tool.websocket.response.WebsocketResLoginPara;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.testng.annotations.Test;import java.util.HashMap;import java.util.Map;@Slf4jpublic class WxServiceLogoutTest extends BaseTest {    @Autowired    JedisTemplate jedisTemplate;    @Autowired    WebSocketClient webSocketClient;    /**     * 1、登录增加统计信息，请求参数增加statistics     */    @Test    public void test1() {        WebSocketClient webSocketClient = null;        String wsUrlSy = "ws://172.16.0.25:1443";        webSocketClient = new WebSocketClient(wsUrlSy);        WxServiceReqLoginBO wxServiceReqLoginBO = new WxServiceReqLoginBO();        Map<String,String> statistics=new HashMap<>();        statistics.put("channelNo","小程序服务端渠道编号");        statistics.put("维度一","渠道编号");        statistics.put("维度二","28");        wxServiceReqLoginBO.setBmAppid("1.00002");        wxServiceReqLoginBO.setMethod("loginReq");        wxServiceReqLoginBO.setPasswd("123456");        wxServiceReqLoginBO.setUname("hxw002");        wxServiceReqLoginBO.setStatistics(statistics);        log.info("websocket登录请求参数" + JSON.toJSONString(wxServiceReqLoginBO));        String websocketLoginObj = webSocketClient.sendMessageSy(JSON.toJSONString(wxServiceReqLoginBO));        log.info("websocket登录返回消息" + websocketLoginObj);        WebsocketResLoginPara websocketResLoginPara = JSON.parseObject(websocketLoginObj, WebsocketResLoginPara.class);        String[] Contents = {"开启redis测试","删除公有私有记忆"};        WebsocketReqContentPara websocketContentPara = new WebsocketReqContentPara();        websocketContentPara.setBmAppid(websocketResLoginPara.getBmAppid());        websocketContentPara.setMethod("aichatReq");        websocketContentPara.setUid(websocketResLoginPara.getUid());        for (String Content : Contents        ) {            websocketContentPara.setContent(Content);            log.info("websocket请求参数" + JSON.toJSONString(websocketContentPara));            String websocketResContentObj=webSocketClient.sendMessageSy(JSON.toJSONString(websocketContentPara));            WebsocketResContentPara websocketResContentPara = JSON.parseObject(websocketResContentObj, WebsocketResContentPara.class);            log.info("websocket返回消息" + JSON.toJSONString(websocketResContentPara.getContent()));        }        webSocketClient.onClose();    }    @Override    public String initUrl() {        return urls.get(ModuleNameEnum.getName(12));    }    @Override    public void initData() {    }    @Override    public void destroyData() {    }}