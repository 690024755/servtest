<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyeye.websocket.infrastructure.repository.mapper.ManualConfigMapper">
  <resultMap id="BaseResultMap" type="com.galaxyeye.websocket.infrastructure.repository.entity.ManualConfig">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="conf_env" jdbcType="VARCHAR" property="confEnv" />
    <result column="ver" jdbcType="VARCHAR" property="ver" />
    <result column="conf_key" jdbcType="VARCHAR" property="confKey" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="enable" jdbcType="TINYINT" property="enable" />
    <result column="verify" jdbcType="TINYINT" property="verify" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.galaxyeye.websocket.infrastructure.repository.entity.ManualConfig">
    <result column="data" jdbcType="LONGVARCHAR" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, appid, conf_env, ver, conf_key, created_at, updated_at, comment, enable, verify, 
    editor
  </sql>

  <sql id="columns">
    id, appid, conf_env, ver, conf_key, data, created_at, updated_at, comment, enable, verify,
    editor
  </sql>

  <sql id="Blob_Column_List">
    data
  </sql>
  <sql id="tableName">
		businessdb.manual_config
  </sql>

  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO
    <include refid="tableName"/>
    (id,appid,conf_env,ver,conf_key,data,created_at,updated_at,comment,enable,verify,editor)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.id},#{item.appid} ,#{item.confEnv}, #{item.ver},#{item.confKey}, #{item.data},#{item.createdAt},#{item.updatedAt},#{item.comment},#{item.enable},#{item.verify},#{item.editor}
      )
    </foreach>
  </insert>

  <select id="selectByExampleWithBLOBs" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.ManualConfigExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.ManualConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.ManualConfigExample">
    delete from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.ManualConfig">
    insert into <include refid="tableName" /> (id, appid, conf_env,
      ver, conf_key, created_at, 
      updated_at, comment, enable, 
      verify, editor, data
      )
    values (#{id,jdbcType=BIGINT}, #{appid,jdbcType=VARCHAR}, #{confEnv,jdbcType=VARCHAR}, 
      #{ver,jdbcType=VARCHAR}, #{confKey,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{comment,jdbcType=VARCHAR}, #{enable,jdbcType=TINYINT}, 
      #{verify,jdbcType=TINYINT}, #{editor,jdbcType=VARCHAR}, #{data,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.ManualConfig">
    insert into <include refid="tableName" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="confEnv != null">
        conf_env,
      </if>
      <if test="ver != null">
        ver,
      </if>
      <if test="confKey != null">
        conf_key,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="verify != null">
        verify,
      </if>
      <if test="editor != null">
        editor,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="confEnv != null">
        #{confEnv,jdbcType=VARCHAR},
      </if>
      <if test="ver != null">
        #{ver,jdbcType=VARCHAR},
      </if>
      <if test="confKey != null">
        #{confKey,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=TINYINT},
      </if>
      <if test="verify != null">
        #{verify,jdbcType=TINYINT},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.ManualConfigExample" resultType="java.lang.Long">
    select count(*) from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update <include refid="tableName" />
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appid != null">
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.confEnv != null">
        conf_env = #{record.confEnv,jdbcType=VARCHAR},
      </if>
      <if test="record.ver != null">
        ver = #{record.ver,jdbcType=VARCHAR},
      </if>
      <if test="record.confKey != null">
        conf_key = #{record.confKey,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=TINYINT},
      </if>
      <if test="record.verify != null">
        verify = #{record.verify,jdbcType=TINYINT},
      </if>
      <if test="record.editor != null">
        editor = #{record.editor,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update <include refid="tableName" />
    set id = #{record.id,jdbcType=BIGINT},
      appid = #{record.appid,jdbcType=VARCHAR},
      conf_env = #{record.confEnv,jdbcType=VARCHAR},
      ver = #{record.ver,jdbcType=VARCHAR},
      conf_key = #{record.confKey,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      comment = #{record.comment,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=TINYINT},
      verify = #{record.verify,jdbcType=TINYINT},
      editor = #{record.editor,jdbcType=VARCHAR},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update <include refid="tableName" />
    set id = #{record.id,jdbcType=BIGINT},
      appid = #{record.appid,jdbcType=VARCHAR},
      conf_env = #{record.confEnv,jdbcType=VARCHAR},
      ver = #{record.ver,jdbcType=VARCHAR},
      conf_key = #{record.confKey,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      comment = #{record.comment,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=TINYINT},
      verify = #{record.verify,jdbcType=TINYINT},
      editor = #{record.editor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>