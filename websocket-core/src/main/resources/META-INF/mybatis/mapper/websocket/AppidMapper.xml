<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyeye.websocket.infrastructure.repository.mapper.AppidMapper">
  <resultMap id="BaseResultMap" type="com.galaxyeye.websocket.infrastructure.repository.entity.Appid">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="appkey" jdbcType="VARCHAR" property="appkey" />
    <result column="apptype" jdbcType="VARCHAR" property="apptype" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="group_tag" jdbcType="VARCHAR" property="groupTag" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="callback_url" jdbcType="VARCHAR" property="callbackUrl" />
    <result column="erid" jdbcType="BIGINT" property="erid" />
    <result column="euid" jdbcType="BIGINT" property="euid" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="from_appid" jdbcType="VARCHAR" property="fromAppid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>

  <sql id="tableName">
		userdb.appid
  </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, appid, appkey, apptype, `desc`, group_tag, `identity`, callback_url, erid, euid,
    pid, info, from_appid, status, created_at, updated_at, deleted_at, version
  </sql>
  <select id="selectByExample" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.AppidExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.AppidExample">
    delete from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.Appid">
    insert into <include refid="tableName" /> (id, appid, appkey,
      apptype, `desc`, group_tag,
      `identity`, callback_url, erid,
      euid, pid, info, from_appid, 
      status, created_at, updated_at, 
      deleted_at, version)
    values (#{id,jdbcType=BIGINT}, #{appid,jdbcType=VARCHAR}, #{appkey,jdbcType=VARCHAR}, 
      #{apptype,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{groupTag,jdbcType=VARCHAR}, 
      #{identity,jdbcType=VARCHAR}, #{callbackUrl,jdbcType=VARCHAR}, #{erid,jdbcType=BIGINT}, 
      #{euid,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{info,jdbcType=VARCHAR}, #{fromAppid,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.Appid">
    insert into <include refid="tableName" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="appkey != null">
        appkey,
      </if>
      <if test="apptype != null">
        apptype,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="groupTag != null">
        group_tag,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="callbackUrl != null">
        callback_url,
      </if>
      <if test="erid != null">
        erid,
      </if>
      <if test="euid != null">
        euid,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="fromAppid != null">
        from_appid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="appkey != null">
        #{appkey,jdbcType=VARCHAR},
      </if>
      <if test="apptype != null">
        #{apptype,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="groupTag != null">
        #{groupTag,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="callbackUrl != null">
        #{callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="erid != null">
        #{erid,jdbcType=BIGINT},
      </if>
      <if test="euid != null">
        #{euid,jdbcType=BIGINT},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="fromAppid != null">
        #{fromAppid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.galaxyeye.websocket.infrastructure.repository.entity.example.AppidExample" resultType="java.lang.Long">
    select count(*) from <include refid="tableName" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update <include refid="tableName" />
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appid != null">
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.appkey != null">
        appkey = #{record.appkey,jdbcType=VARCHAR},
      </if>
      <if test="record.apptype != null">
        apptype = #{record.apptype,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.groupTag != null">
        group_tag = #{record.groupTag,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.callbackUrl != null">
        callback_url = #{record.callbackUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.erid != null">
        erid = #{record.erid,jdbcType=BIGINT},
      </if>
      <if test="record.euid != null">
        euid = #{record.euid,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.fromAppid != null">
        from_appid = #{record.fromAppid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update <include refid="tableName" />
    set id = #{record.id,jdbcType=BIGINT},
      appid = #{record.appid,jdbcType=VARCHAR},
      appkey = #{record.appkey,jdbcType=VARCHAR},
      apptype = #{record.apptype,jdbcType=VARCHAR},
      desc = #{record.desc,jdbcType=VARCHAR},
      group_tag = #{record.groupTag,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      callback_url = #{record.callbackUrl,jdbcType=VARCHAR},
      erid = #{record.erid,jdbcType=BIGINT},
      euid = #{record.euid,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=BIGINT},
      info = #{record.info,jdbcType=VARCHAR},
      from_appid = #{record.fromAppid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateSetDeletedAtValueIsNull" parameterType="map">
    update <include refid="tableName" />
    set
    deleted_at = null
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


</mapper>