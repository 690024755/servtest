<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.3.xsd
   	http://www.springframework.org/schema/jee
   	http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
   	http://www.springframework.org/schema/tx
   	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
       default-lazy-init="true" default-autowire="byName">
    <bean id="dataSourceTest" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url">
            <value>
                ${test.jdbc.druid.url}
            </value>
        </property>
        <property name="username">
            <value>${test.jdbc.druid.user}</value>
        </property>
        <property name="password">
            <value>${test.jdbc.druid.password}</value>
        </property>
        <property name="filters">
            <value>${test.jdbc.druid.filters}</value>
        </property>
        <property name="maxActive">
            <value>${test.jdbc.druid.maxActive}</value>
        </property>
        <property name="initialSize">
            <value>${test.jdbc.druid.initialSize}</value>
        </property>
        <property name="maxWait">
            <value>${test.jdbc.druid.maxWait}</value>
        </property>
        <property name="minIdle">
            <value>${test.jdbc.druid.minIdle}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${test.jdbc.druid.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="minEvictableIdleTimeMillis">
            <value>${test.jdbc.druid.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${test.jdbc.druid.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>${test.jdbc.druid.testWhileIdle}</value>
        </property>
        <property name="testOnBorrow">
            <value>${test.jdbc.druid.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${test.jdbc.druid.testOnReturn}</value>
        </property>
        <property name="poolPreparedStatements">
            <value>${test.jdbc.druid.poolPreparedStatements}</value>
        </property>
        <property name="maxOpenPreparedStatements">
            <value>${test.jdbc.druid.maxOpenPreparedStatements}</value>
        </property>
    </bean>
    <bean id="dataSourceDev" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url">
            <value>
                ${dev.jdbc.druid.url}
            </value>
        </property>
        <property name="username">
            <value>${dev.jdbc.druid.user}</value>
        </property>
        <property name="password">
            <value>${dev.jdbc.druid.password}</value>
        </property>
        <property name="filters">
            <value>${dev.jdbc.druid.filters}</value>
        </property>
        <property name="maxActive">
            <value>${dev.jdbc.druid.maxActive}</value>
        </property>
        <property name="initialSize">
            <value>${dev.jdbc.druid.initialSize}</value>
        </property>
        <property name="maxWait">
            <value>${dev.jdbc.druid.maxWait}</value>
        </property>
        <property name="minIdle">
            <value>${dev.jdbc.druid.minIdle}</value>
        </property>
        <property name="timeBetweenEvictionRunsMillis">
            <value>${dev.jdbc.druid.timeBetweenEvictionRunsMillis}</value>
        </property>
        <property name="minEvictableIdleTimeMillis">
            <value>${dev.jdbc.druid.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${dev.jdbc.druid.validationQuery}</value>
        </property>
        <property name="testWhileIdle">
            <value>${dev.jdbc.druid.testWhileIdle}</value>
        </property>
        <property name="testOnBorrow">
            <value>${dev.jdbc.druid.testOnBorrow}</value>
        </property>
        <property name="testOnReturn">
            <value>${dev.jdbc.druid.testOnReturn}</value>
        </property>
        <property name="poolPreparedStatements">
            <value>${dev.jdbc.druid.poolPreparedStatements}</value>
        </property>
        <property name="maxOpenPreparedStatements">
            <value>${dev.jdbc.druid.maxOpenPreparedStatements}</value>
        </property>
    </bean>
    <bean id="dataSource" class="com.galaxyeye.websocket.config.dataSource.ThreadLocalRountingDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceTest"/>
        <property name="targetDataSources">
            <map key-type="com.galaxyeye.websocket.config.dataSource.DataSources">
                <entry key="testProd" value-ref="dataSourceTest"/>
                <entry key="dev" value-ref="dataSourceDev"/>
            </map>
        </property>
    </bean>
    <bean id="mysqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:META-INF/mybatis/websocket-configuration.xml"/>
        <property name="mapperLocations" value="classpath*:META-INF/mybatis/mapper/websocket/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="mysqlSessionFactory"></property>
        <property name="basePackage" value="com.galaxyeye.websocket.infrastructure.repository.mapper"></property>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jdbcTemplateCus" class="com.galaxyeye.websocket.tool.jdbc.JdbcTemplateCus">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

</beans>
